<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Jingfei's Blog]]></title>
  <link href="http://hanjingfei.github.io/atom.xml" rel="self"/>
  <link href="http://hanjingfei.github.io/"/>
  <updated>2016-03-09T12:19:56+08:00</updated>
  <id>http://hanjingfei.github.io/</id>
  <author>
    <name><![CDATA[Jingfei Han]]></name>
    <email><![CDATA[icsoc@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Plugins of Code Highlighting]]></title>
    <link href="http://hanjingfei.github.io/blog/2016/03/08/plugin-codeblock/"/>
    <updated>2016-03-08T17:42:52+08:00</updated>
    <id>http://hanjingfei.github.io/blog/2016/03/08/plugin-codeblock</id>
    <content type="html"><![CDATA[<h2>Code Highlight by using &ldquo;Code Block&rdquo;</h2>

<h3>display effect</h3>

<figure class='code'><figcaption><span>intital example </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='verilog'><span class='line'><span class="k">initial</span> <span class="k">begin</span>
</span><span class='line'>    <span class="n">clkn_rstn</span>   <span class="o">=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">repeat</span><span class="p">(</span><span class="mh">10</span><span class="p">)@(</span><span class="k">posedge</span> <span class="n">clkn</span><span class="p">);</span>
</span><span class='line'>    <span class="p">#</span><span class="mh">1</span><span class="p">;</span>
</span><span class='line'>    <span class="n">clkn_rstn</span>   <span class="o">=</span> <span class="mh">1</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>source</h3>

<figure class='code'><figcaption><span>Code Block Syntax </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% codeblock lang:verilog intital example %}
</span><span class='line'>initial begin
</span><span class='line'>    clkn_rstn   = 0;
</span><span class='line'>    repeat(10)@(posedge clkn);
</span><span class='line'>    #1;
</span><span class='line'>    clkn_rstn   = 1;
</span><span class='line'>end
</span><span class='line'>{% endcodeblock %}</span></code></pre></td></tr></table></div></figure>


<h2>Code Highlight by using &ldquo;Backtick Code Blocks&rdquo;</h2>

<h3>display effect</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='verilog'><span class='line'><span class="k">initial</span> <span class="k">begin</span>
</span><span class='line'>    <span class="n">clkn_rstn</span>   <span class="o">=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">repeat</span><span class="p">(</span><span class="mh">10</span><span class="p">)@(</span><span class="k">posedge</span> <span class="n">clkn</span><span class="p">);</span>
</span><span class='line'>    <span class="p">#</span><span class="mh">1</span><span class="p">;</span>
</span><span class='line'>    <span class="n">clkn_rstn</span>   <span class="o">=</span> <span class="mh">1</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>source</h3>

<figure class='code'><figcaption><span>Backtick Code Blocks Syntax </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>``` verilog
</span><span class='line'>  initial begin
</span><span class='line'>      clkn_rstn   = 0;
</span><span class='line'>      repeat(10)@(posedge clkn);
</span><span class='line'>      #1;
</span><span class='line'>      clkn_rstn   = 1;
</span><span class='line'>  end  
</span><span class='line'>```</span></code></pre></td></tr></table></div></figure>


<p>The source parts are displayed by <code>{% raw %}</code> and
 <code>{\% endraw %}</code> which escape liquid tags.</p>

<p>Good: This inline <code>{% raw %}</code> tag is escaped.<br/>
Bad : This inline <code>{\% endraw %}</code> tag is escaped.</p>

<figure class='code'><figcaption><span>Liquid Escape Syntax </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&#123;% codeblock %&#125;
</span><span class='line'>&#123;% raw %&#125;
</span><span class='line'>some code here
</span><span class='line'>&#123;% endraw %&#125;
</span><span class='line'>&#123;% endcodeblock %&#125;</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First_post]]></title>
    <link href="http://hanjingfei.github.io/blog/2016/03/07/first-post/"/>
    <updated>2016-03-07T14:08:32+08:00</updated>
    <id>http://hanjingfei.github.io/blog/2016/03/07/first-post</id>
    <content type="html"><![CDATA[<h2>Code Highlight by Backtick Code Block</h2>

<h3>verilog</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='verilog'><span class='line'><span class="k">always</span> <span class="p">@(</span><span class="k">posedge</span> <span class="n">hclk</span><span class="p">)</span> <span class="k">begin</span> <span class="o">:</span> <span class="no">ID_MEM_EMPTY</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">id_wpt</span> <span class="o">!=</span> <span class="n">id_rpt</span><span class="p">)</span>  <span class="n">id_mem_empty</span> <span class="o">&lt;=</span> <span class="no">`TD</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span> <span class="n">id_mem_empty</span> <span class="o">&lt;=</span>  <span class="no">`TD</span> <span class="mh">1</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>tcl</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='tcl'><span class='line'><span class="k">foreach</span> f <span class="k">[</span><span class="nb">glob</span> <span class="s2">&quot;*${file_name}*&quot;</span><span class="k">]</span> <span class="k">{</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="k">[</span><span class="nb">file</span> normalize <span class="nv">$f</span><span class="k">]</span>
</span><span class='line'><span class="k">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>vim</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">function</span><span class="p">!</span> GotoFileWithLineNum<span class="p">()</span>
</span><span class='line'><span class="c">    &quot; exclude comma from file name search</span>
</span><span class='line'><span class="c">    &quot; change the &#39;isfname&#39; option temporarily to pick up file name in ncverilog MSG</span>
</span><span class='line'>    <span class="k">let</span> bak_isfname <span class="p">=</span> &amp;<span class="nb">isfname</span>
</span><span class='line'>    <span class="k">set</span> <span class="nb">isfname</span><span class="p">=</span>@<span class="p">,</span><span class="m">48-57</span><span class="p">,</span>/<span class="p">,</span>.<span class="p">,-,</span>_<span class="p">,+,</span>#<span class="p">,</span>$<span class="p">,</span>%<span class="p">,~,=</span>&quot;
</span><span class='line'><span class="c">    &quot; filename under the cursor </span>
</span><span class='line'>    <span class="k">let</span> file_name <span class="p">=</span> expand<span class="p">(</span><span class="s1">&#39;&lt;cfile&gt;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">!</span>strlen<span class="p">(</span>file_name<span class="p">)</span>
</span><span class='line'>        echo <span class="s1">&#39;NO FILE UNDER CURSOR&#39;</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="k">endif</span>
</span><span class='line'>
</span><span class='line'><span class="c">    &quot; look for a line number separated by any :,&quot;&lt;space&gt; </span>
</span><span class='line'>    <span class="k">if</span> search<span class="p">(</span><span class="s1">&#39;\%#\f*[:, &quot;]*\zs[0-9]\+&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c">        &quot; change the &#39;iskeyword&#39; option temporarily to pick up just numbers </span>
</span><span class='line'>        <span class="k">let</span> temp <span class="p">=</span> &amp;<span class="nb">iskeyword</span>
</span><span class='line'>        <span class="k">set</span> <span class="nb">iskeyword</span><span class="p">=</span><span class="m">48-57</span>
</span><span class='line'>        <span class="k">let</span> line_number <span class="p">=</span> expand<span class="p">(</span><span class="s1">&#39;&lt;cword&gt;&#39;</span><span class="p">)</span>
</span><span class='line'>        exe <span class="s1">&#39;set iskeyword=&#39;</span> . temp
</span><span class='line'>    <span class="k">endif</span>
</span><span class='line'>
</span><span class='line'>    exe <span class="s1">&#39;set isfname=&#39;</span> . bak_isfname
</span><span class='line'><span class="c">    &quot; edit the file </span>
</span><span class='line'>    exe <span class="s1">&#39;e &#39;</span>.file_name
</span><span class='line'>
</span><span class='line'><span class="c">    &quot; if there is a line number, go to it </span>
</span><span class='line'>    <span class="k">if</span> exists<span class="p">(</span><span class="s1">&#39;line_number&#39;</span><span class="p">)</span>
</span><span class='line'>        exe line_number
</span><span class='line'>    <span class="k">endif</span>
</span><span class='line'><span class="k">endfunction</span>
</span><span class='line'>
</span><span class='line'>map gf :<span class="k">call</span> GotoFileWithLineNum<span class="p">()&lt;</span>CR<span class="p">&gt;</span>
</span><span class='line'>map gsf :<span class="k">sp</span><span class="p">&lt;</span>CR<span class="p">&gt;</span>:<span class="k">call</span> GotoFileWithLineNum<span class="p">()&lt;</span>CR<span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
